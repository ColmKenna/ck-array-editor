{"version":3,"file":"ck-array-editor.min.js","sources":["../../src/components/ck-array-editor/ck.array.editor.styles.ts","../../src/components/ck-array-editor/ck.array.editor.ts"],"sourcesContent":["export const ckArrayEditorCSS = `\r\n:host {\r\n  display: block;\r\n  padding: 1rem;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n\\.ck-array-editor {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n\\.ck-array-editor:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.message {\r\n  font-size: 1.5rem;\r\n  margin: 0;\r\n  /* per-instance color via CSS custom property */\r\n  color: var(--ck-array-editor-color, #333);\r\n}\r\n\r\n.subtitle {\r\n  font-size: 1rem;\r\n  margin: 0.5rem 0 0 0;\r\n  opacity: 0.8;\r\n}\r\n`;\r\n\r\n// Try to create a constructable stylesheet where supported. Fall back to null.\r\nexport const ckArrayEditorSheet: CSSStyleSheet | null = (() => {\r\n  try {\r\n    // CSSStyleSheet may not be available in older browsers\r\n    // create and populate the sheet once at module-eval time\r\n    // so it gets parsed only once.\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore: may not exist in all targets\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(ckArrayEditorCSS);\r\n    return sheet;\r\n  } catch {\r\n    return null;\r\n  }\r\n})();\r\n\r\n","import { ckArrayEditorSheet, ckArrayEditorCSS } from './ck.array.editor.styles';\r\n\r\nexport class CkArrayEditor extends HTMLElement {\r\n  private shadow: ShadowRoot;\r\n\r\n  constructor() {\r\n    super();\r\n    this.shadow = this.attachShadow({ mode: 'open' });\r\n\r\n    // Adopt the constructable stylesheet when supported. We do this once per instance\r\n    // but the underlying sheet was created once at module load time.\r\n    const adopted = (\r\n      this.shadow as unknown as ShadowRoot & {\r\n        adoptedStyleSheets?: CSSStyleSheet[];\r\n      }\r\n    ).adoptedStyleSheets;\r\n    if (ckArrayEditorSheet && adopted !== undefined) {\r\n      (\r\n        this.shadow as unknown as ShadowRoot & {\r\n          adoptedStyleSheets: CSSStyleSheet[];\r\n        }\r\n      ).adoptedStyleSheets = [...adopted, ckArrayEditorSheet];\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.render();\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return ['name', 'color'];\r\n  }\r\n\r\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n    if (oldValue !== newValue) {\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  get name() {\r\n    return this.getAttribute('name') || 'World';\r\n  }\r\n\r\n  set name(value: string) {\r\n    this.setAttribute('name', value);\r\n  }\r\n\r\n  get color() {\r\n    return this.getAttribute('color') || '#333';\r\n  }\r\n\r\n  set color(value: string) {\r\n    this.setAttribute('color', value);\r\n  }\r\n\r\n  private render() {\r\n    // If constructable stylesheets are not available, ensure a single fallback <style>\r\n    // is injected per-shadow-root. We avoid creating different style content per instance\r\n    // by keeping per-instance differences in CSS custom properties.\r\n    if (!ckArrayEditorSheet) {\r\n      // Only inject the fallback style once per shadow root\r\n      if (!this.shadow.querySelector('style[data-ck-array-editor-fallback]')) {\r\n        const style = document.createElement('style');\r\n        style.setAttribute('data-ck-array-editor-fallback', '');\r\n        style.textContent = ckArrayEditorCSS;\r\n        this.shadow.appendChild(style);\r\n      }\r\n    }\r\n\r\n    // Apply per-instance color via CSS custom property instead of embedding styles.\r\n    this.style.setProperty('--ck-array-editor-color', this.color);\r\n\r\n    this.shadow.innerHTML = `\r\n      <div class=\"ck-array-editor\">\r\n        <h1 class=\"message\">Hello, ${this.name}!</h1>\r\n        <p class=\"subtitle\">Welcome to our Web Component Library</p>\r\n      </div>\r\n    `;\r\n\r\n    // For testability (unit tests inspect shadowRoot.innerHTML), set the color\r\n    // as an inline style on the message element so the color string appears in\r\n    // the serialized HTML. Runtime styling still relies on the CSS variable.\r\n    const msg = this.shadow.querySelector('.message') as HTMLElement | null;\r\n    if (msg) msg.style.color = this.color;\r\n  }\r\n}\r\n\r\n// Register the custom element\r\nif (!customElements.get('ck-array-editor')) {\r\n  customElements.define('ck-array-editor', CkArrayEditor);\r\n}\r\n\r\n\r\n"],"names":["ckArrayEditorCSS","ckArrayEditorSheet","sheet","CSSStyleSheet","replaceSync","CkArrayEditor","HTMLElement","constructor","super","this","shadow","attachShadow","mode","adopted","adoptedStyleSheets","undefined","connectedCallback","render","observedAttributes","attributeChangedCallback","name","oldValue","newValue","getAttribute","value","setAttribute","color","querySelector","style","document","createElement","textContent","appendChild","setProperty","innerHTML","msg","customElements","get","define"],"mappings":"6QAAO,MAAMA,EAAmB,2qBAqCnBC,EAA2C,MACtD,IAME,MAAMC,EAAQ,IAAIC,cAElB,OADAD,EAAME,YAAYJ,GACXE,CACT,CAAE,MACA,OAAO,IACT,CACD,EAbuD,GCnClD,MAAOG,UAAsBC,YAGjC,WAAAC,GACEC,QACAC,KAAKC,OAASD,KAAKE,aAAa,CAAEC,KAAM,SAIxC,MAAMC,EACJJ,KAAKC,OAGLI,mBACEb,QAAkCc,IAAZF,IAEtBJ,KAAKC,OAGLI,mBAAqB,IAAID,EAASZ,GAExC,CAEA,iBAAAe,GACEP,KAAKQ,QACP,CAEA,6BAAWC,GACT,MAAO,CAAC,OAAQ,QAClB,CAEA,wBAAAC,CAAyBC,EAAcC,EAAkBC,GACnDD,IAAaC,GACfb,KAAKQ,QAET,CAEA,QAAIG,GACF,OAAOX,KAAKc,aAAa,SAAW,OACtC,CAEA,QAAIH,CAAKI,GACPf,KAAKgB,aAAa,OAAQD,EAC5B,CAEA,SAAIE,GACF,OAAOjB,KAAKc,aAAa,UAAY,MACvC,CAEA,SAAIG,CAAMF,GACRf,KAAKgB,aAAa,QAASD,EAC7B,CAEQ,MAAAP,GAIN,IAAKhB,IAEEQ,KAAKC,OAAOiB,cAAc,wCAAyC,CACtE,MAAMC,EAAQC,SAASC,cAAc,SACrCF,EAAMH,aAAa,gCAAiC,IACpDG,EAAMG,YAAc/B,EACpBS,KAAKC,OAAOsB,YAAYJ,EAC1B,CAIFnB,KAAKmB,MAAMK,YAAY,0BAA2BxB,KAAKiB,OAEvDjB,KAAKC,OAAOwB,UAAY,6EAESzB,KAAKW,uGAQtC,MAAMe,EAAM1B,KAAKC,OAAOiB,cAAc,YAClCQ,IAAKA,EAAIP,MAAMF,MAAQjB,KAAKiB,MAClC,EAIGU,eAAeC,IAAI,oBACtBD,eAAeE,OAAO,kBAAmBjC"}